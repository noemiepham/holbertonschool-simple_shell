#include "shell.h"
#include <stdlib.h>
/*
 * _getenv - get environ
 * @name: name de environ
 * Return: environ value
 */

char **_getenv(const char *name)
{
    int i = 0;
    int j = 0;
    char *envName;
    char *envValue = NULL;
    char **array;
    char *cur_word;
    char *sep = ":";

    while (environ[i])
    {
        printf("DEBUG getenv at i=[%d], environ [%s] found\n", i, environ[i]);
        envName = getEnvKey(environ[i]);

        if (strcmp(envName, name) == 0)
        {
            printf("DEBUG getenv at i=[%d], environ [%s] found\n", i, envName);
            envValue = getEnvValue(environ[i]);
            break;
        }
        i++;
    }

 array = malloc(sizeof(char) * BUFFER);
    if (array == NULL)
        return (NULL);
    
    cur_word = strtok(envValue, sep);
    printf("DEBUG getenv envValue=[%s]\n", cur_word);

    while (cur_word != NULL)
    {
        printf("DEBUG getenv var=[%s], value=[%s]\n", envName, cur_word);
        array[j] = cur_word;
        cur_word = strtok(NULL, sep);
        j++;
    }
    array[i] = NULL;
    return (array);
}

char* getEnvKey(char *env)
{
    int env_length = 0;
    int separatorPosition = 0;
    char *envKey = NULL;
    int i, j;
	while (env[env_length])
		env_length++;

    while (env[separatorPosition] != '=')
		separatorPosition++;
    /* printf("DEBUG getEnvKey separatorPosition : %d\n", separatorPosition); */

    envKey = malloc(sizeof(char) * (separatorPosition));

    for (i=0,j =0 ; j<separatorPosition ;i++, j++){
        envKey[i] = env[j];
    }

    printf("DEBUG getEnvKey : %s\n", envKey);
    return envKey;
}

char* getEnvValue(char *env)
{
    int env_length = 0;
    int separatorPosition = 0;
    char *value = NULL;
    int i, j;
	while (env[env_length])
		env_length++;
    /* printf("DEBUG getEnvValue env_length : %d\n", env_length); */

    while (env[separatorPosition] != '=')
		separatorPosition++;
    /* printf("DEBUG getEnvValue separatorPosition : %d\n", separatorPosition); */


    value = malloc(sizeof(char) * (env_length - separatorPosition));

    for (i=0,j=separatorPosition + 1 ; j < env_length ;i++, j++){
        value[i] = env[j];
    }

    /* printf("DEBUG getEnvValue : %s\n", value); */

    return (value);
}


int main(void)
{
    int i = 0;
    char **arr = _getenv("PATH");

    while (arr[i] != NULL)
    {
        printf("main %s\n", arr[i]);
        i++;
    }

    printf("\n 2e fois \n\n");
    i = 0;
    arr = _getenv("PATH");

    while (arr[i] != NULL)
    {
        printf("main %s\n", arr[i]);
        i++;
    }
    return (0);
}

